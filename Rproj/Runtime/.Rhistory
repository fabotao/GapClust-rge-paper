race.res <- transform.race()
cell.res <- transform.cell()
for(i in 1:99){
print(table(RaceID.result[[i]]))
print(table(race.res[[i]]))
}
calcul.f1 <- function(res){
f1.vec <- c()
for(i in 1:length(res)){
TP <- length(which(res[[i]] == 1 & true.res[[i]] == 1))
FP <- length(which(res[[i]] == 1 & true.res[[i]] == 0))
FN <- length(which(res[[i]] == 0 & true.res[[i]] == 1))
if(TP ==0 & FP ==0){
P = 0
}else{
P= TP / (TP + FP)
}
if(TP == 0 & FN == 0){
R = 0
}else{
R = TP / (TP + FN)
}
if(P == 0 & R == 0){
f1.vec <- c(f1.vec, 0)
}else{
f1.vec <- c(f1.vec, 2*P*R/(P+R))
}
}
return(f1.vec)
}
f1 <- calcul.f1(gini.res)
f2 <- calcul.f1(OUR.result)
f3 <- calcul.f1(race.res)
f4 <- calcul.f1(FiRE.result)
f5 <- calcul.f1(FiRE.result10)
f6 <- calcul.f1(FiRE.result05)
f7 <- calcul.f1(cell.res)
df <- data.frame(cells=rep(2:100, 4), f1_score=c(f1, f3, f7, f2), method=c(rep('GiniClust', 99), rep('RaceID', 99), rep('CellSIUS', 99), rep('GapClust', 99)))
df$method <- factor(df$method, levels=c('GiniClust', 'RaceID', 'CellSIUS', 'GapClust'), ordered = T)
sp <- ggplot(df, aes(x=cells, y=f1_score, fill=factor(method), color=factor(method))) + geom_point(size=2.5)
sp + facet_grid(. ~ method) + theme(panel.grid.minor.x=element_line(size = 0.3, linetype = 'solid',colour = "grey90"),
panel.grid.minor.y=element_line(size = 0.3, linetype = 'solid',colour = "grey90"),
panel.background = element_rect(fill = "white", linetype = "solid"),
panel.grid.major = element_line(size = 0.8, linetype = 'solid',colour = "grey90"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.position="none",
strip.text.x = element_text(size = 20, colour = "black", angle = 0),
strip.background = element_rect(color="white", fill="white", size=1.5, linetype="solid"),
axis.text.x = element_text(size=14, colour='black'),
axis.text.y = element_text(size=14, colour='black'),
axis.title.x = element_text(size=18),
axis.title.y = element_text(size=16),
axis.ticks.x = element_line(size=1),
axis.ticks.y = element_line(size=1)) + labs(x='# of rare cells', y=expression(paste(F["1 "], score))) +
scale_color_manual(values = c("GiniClust" = "DeepSkyBlue","RaceID" = "red1","CellSIUS" = "Magenta", 'GapClust' = 'green3')) +
scale_x_continuous(breaks=c(2, 20, 40, 60, 80, 100), labels=c('2', '20', '40', '60', '80', '100'))
setwd('/home/sam/Documents/RareCellDetection/Proj/Runtime/')
library(ggplot2)
## Memory usage plot
memory.dat <- data.frame(method=c('GiniClust', 'RaceID', 'CellSIUS','FiRE', 'GapClust'),
size=c(117.93, 78.58, 168.16, 19.47, 2.79),
col=c('DeepSkyBlue', 'red1', 'Magenta', 'navy', 'green4'))
memory.dat$method <- factor(memory.dat$method, levels=c('GapClust', 'RaceID', 'GiniClust', 'CellSIUS','FiRE'), ordered = T)
col=c('green4', 'red1', "DeepSkyBlue", "Magenta", "navy")
p1 <- ggplot(memory.dat,aes(method, size, fill=method)) + geom_bar(stat='identity', width=0.5) +
scale_fill_manual(name=NULL, values = col) + theme_bw() +
theme(legend.position="none", panel.border = element_rect(color='black', fill=NA, size=1),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16)
) + labs(x=' ', y='Memory Usage/GB')
## Computation time
p1
setwd('/home/sam/Documents/RareCellDetection/Proj/Runtime/')
library(ggplot2)
## Memory usage plot
memory.dat <- data.frame(method=c('GiniClust', 'RaceID', 'CellSIUS','FiRE', 'GapClust'),
size=c(117.93, 78.58, 168.16, 19.47, 2.79),
col=c('DeepSkyBlue', 'red1', 'Magenta', 'navy', 'green4'))
memory.dat$method <- factor(memory.dat$method, levels=c('GapClust', 'RaceID', 'GiniClust', 'CellSIUS','FiRE'), ordered = T)
col=c('green4', 'red1', "DeepSkyBlue", "Magenta", "navy")
p1 <- ggplot(memory.dat,aes(method, size, fill=method)) + geom_bar(stat='identity', width=0.5) +
scale_fill_manual(name=NULL, values = col) + theme_bw() +
theme(legend.position="none", panel.border = element_rect(color='black', fill=NA, size=1),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16)
) + labs(x=' ', y='Memory usage/GB')
p1
## Computation time
cell.num <- c(1000, 2500, 5000, 10000, 15000, 20000, 25000, 30000, 35000, 40000, 45000, 50000, 55000, 60000, 65000, 68579)
cellsius.time <- c()
for(i in 1:14){
load(paste0('CELLSIUS_runtime_', i, '.RData'))
cellsius.time <- c(cellsius.time, as.numeric(time.taken, units='mins'))
}
fire.time <- c()
for(i in 1:16){
load(paste0('FiRE_runtime_', i, '.RData'))
fire.time <- c(fire.time, as.numeric(time.taken, units='mins'))
}
our.time <- c()
for(i in 1:16){
load(paste0('OUR_runtime_', i, '.RData'))
our.time <- c(our.time, as.numeric(time.taken, units='mins'))
}
gini.time <- c()
for(i in 1:11){
load(paste0('Gini_runtime_', i, '.RData'))
gini.time <- c(gini.time, as.numeric(time.taken, units='mins'))
}
race.time <- c()
for(i in 1:9){
load(paste0('RaceID_runtime_', i, '.RData'))
race.time <- c(race.time, as.numeric(time.taken, units='mins'))
}
df <- data.frame(x=c(cell.num[1:14], cell.num[1:16], cell.num[1:16], cell.num[1:11], cell.num[1:9]),
y=c(cellsius.time, fire.time, our.time, gini.time, race.time),
group=c(rep('CellSIUS', 14), rep('FiRE', 16), rep('GapClust', 16), rep('GiniClust', 11), rep('RaceID', 9)))
df$logx <- log10(df$x)
df$logy <- log10(df$y)
df$group <- factor(df$group, levels=c('GapClust', 'RaceID', 'GiniClust', 'CellSIUS','FiRE'), ordered = T)
sp1 <- ggplot(data=df) + geom_point(aes(x=logx, y=logy, color=group), size=3) + geom_line(aes(x=logx, y=logy, color=group))
sp1 + theme_bw() + theme(#panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
legend.position=c(0.15, 0.83), panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.text = element_text(size = 14, face = "bold"),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) + labs(x=expression(paste(Log['10 '], '(#samples)')), y=expression(paste(Log["10 "], '(minutes)'))) +
scale_color_manual(name=NULL, values = c("RaceID"='red1', "GapClust"="forestgreen", "GiniClust"="DeepSkyBlue", "FiRE" = "navy", 'CellSIUS'='magenta'))
sp1 <- ggplot(data=df) + geom_point(aes(x=logx, y=logy, color=group), size=3) + geom_line(aes(x=logx, y=logy, color=group))
sp1 + theme_bw() + theme(#panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
legend.position=c(0.15, 0.83), panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.text = element_text(size = 14, face = "bold"),
axis.text.x = element_text(size=14, colour = 'black'),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) + labs(x=expression(paste(Log['10 '], '(#samples)')), y=expression(paste(Log["10 "], '(minutes)'))) +
scale_color_manual(name=NULL, values = c("RaceID"='red1', "GapClust"="forestgreen", "GiniClust"="DeepSkyBlue", "FiRE" = "navy", 'CellSIUS'='magenta'))
p1 <- ggplot(memory.dat,aes(method, size, fill=method)) + geom_bar(stat='identity', width=0.5) +
scale_fill_manual(name=NULL, values = col) + theme_bw() +
theme(legend.position="none", panel.border = element_rect(color='black', fill=NA, size=1),
axis.text.x = element_text(size=14, colour = 'black'),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16)
) + labs(x=' ', y='Memory usage/GB')
p1
library(ggplot2)
library(ComplexHeatmap)
library(splatter)
workdir              = "/home/sam/Documents/RareCellDetection/Proj/Doublet/"
# where you put the data and results
setwd(workdir)
load('results/RaceIDClustering.RData') # RaceID.result
load('results/OURClustering.RData') # GapClust.result
load('results/GiniClustering.RData') # Gini.result
load('results/FiREClustering.RData') # FiRE.result
load('results/CELLSIUSClustering.RData') # FiRE.result
true.res <- RaceID.result
for (q in 1:7){
for (i in 1:20){
#set.seed(seeds[(q-1)*20+i])
exprimentID<-paste("10X_rare",q,"_",i, '_ExprM.filter.RData',sep="")
load(paste("data/", exprimentID, sep=""))
true.res[[((q-1) * 20) + i]] <- ifelse(grepl('CD14', dimnames(ExprM.RawCounts.filter)[[2]]), 1, 0)
}
}
Gini.result <- sapply(Gini.result, as.character)
transform.gini <- function(){
gini.res <- list()
for(i in 1:length(Gini.result)){
cnt <- table(Gini.result[[i]])
cnt.top <- table(Gini.result[[i]][1:2])
small <- names(cnt)[cnt <= sum(cnt) * 0.15] # 0.15 is for 100 cells or a little more
small <- small[small != 'Singleton']
small <- small[small %in% names(cnt.top)]
if(length(small)>=1){
gini.res[[i]] <- ifelse(Gini.result[[i]] %in% small, 1, 0)
}else{
gini.res[[i]] <- (rep(0, length(Gini.result[[i]])))
}
}
return(gini.res)
}
transform.race <- function(){
race.res <- list()
for(i in 1:length(RaceID.result)){
cnt <- table(RaceID.result[[i]])
cnt.top <- table(RaceID.result[[i]][1:2])
small <- names(cnt)[cnt <= sum(cnt) * 0.15] # 0.15 is for 100 cells or a little more
small <- small[small %in% names(cnt.top)]
if(length(small)>=1){
race.res[[i]] <- ifelse(RaceID.result[[i]] %in% small, 1, 0)
}else{
race.res[[i]] <- (rep(0, length(RaceID.result[[i]])))
}
}
return(race.res)
}
transform.cell <- function(){
cell.res <- list()
for(i in 1:length(CELLSIUS.result)){
cell.res[[i]] <- (rep(0, length(CELLSIUS.result[[i]])))
cnt.top <- table(CELLSIUS.result[[i]][1:2])
cnt.top <- cnt.top[cnt.top > 0 & grepl('_', names(cnt.top))]
cnt <- table(CELLSIUS.result[[i]])
if(length(cnt.top)>=1){
for(j in 1:length(cnt.top)){
label <- names(cnt.top)[j]
if(cnt[label] < sum(cnt) * 0.15){
cell.res[[i]][CELLSIUS.result[[i]] == label] <- 1
}
}
}else{
cell.res[[i]] <- (rep(0, length(CELLSIUS.result[[i]])))
}
}
return(cell.res)
}
gini.res <- transform.gini()
race.res <- transform.race()
cell.res <- transform.cell()
for(i in 1:10){
print(table(RaceID.result[[i]]))
print(table(race.res[[i]]))
}
calcul.f1 <- function(res){
f1.vec <- c()
for(i in 1:length(res)){
TP <- length(which(res[[i]] == 1 & true.res[[i]] == 1))
FP <- length(which(res[[i]] == 1 & true.res[[i]] == 0))
FN <- length(which(res[[i]] == 0 & true.res[[i]] == 1))
if(TP ==0 & FP ==0){
P = 0
}else{
P= TP / (TP + FP)
}
if(TP == 0 & FN == 0){
R = 0
}else{
R = TP / (TP + FN)
}
if(P == 0 & R == 0){
f1.vec <- c(f1.vec, 0)
}else{
f1.vec <- c(f1.vec, 2*P*R/(P+R))
}
}
return(f1.vec)
}
f1 <- calcul.f1(gini.res)
f2 <- calcul.f1(OUR.result)
f3 <- calcul.f1(race.res)
f4 <- calcul.f1(FiRE.result)
f5 <- calcul.f1(cell.res)
group <- c(rep(1, 20), rep(2, 20), rep(3, 20), rep(4, 20), rep(5, 20), rep(6, 20), rep(7, 20))
f1.ave <- tapply(f1, group, mean)
f2.ave <- tapply(f2, group, mean)
f3.ave <- tapply(f3, group, mean)
f4.ave <- tapply(f4, group, mean)
f5.ave <- tapply(f5, group, mean)
df <- data.frame(x=as.numeric(as.character(c(names(f1.ave), names(f2.ave), names(f3.ave), names(f4.ave), names(f5.ave)))),
y=c(f1.ave, f2.ave, f3.ave, f4.ave, f5.ave),
group=c(rep('GiniClust', 7), rep('GapClust', 7), rep('RaceID', 7),  rep('FiRE', 7), rep('CellSIUS', 7)))
df$group <- factor(df$group, levels=c('GapClust', 'RaceID', 'GiniClust', 'CellSIUS', 'FiRE'), ordered = T)
sp1 <- ggplot(data=df) + geom_point(aes(x=x, y=y, color=group), size=3) + geom_line(aes(x=x, y=y, color=group))
sp1 + theme_bw() + theme(#panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.position='right', panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.text = element_text(size = 14, face = "bold"),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) + labs(x='% of rare cells', y=expression(paste(F["1 "], score))) +
scale_color_manual(name=NULL, values = c("RaceID"='red1', "GapClust"="green4", "GiniClust"="DeepSkyBlue", "CellSIUS" = "Magenta", "FiRE" = "navy")) +
scale_x_continuous(breaks=sort(unique(df$x)), labels=c('0.08', '0.16', '0.33', '0.66', '1.32', '2.60', '5.00'))
library(ggplot2)
library(ComplexHeatmap)
library(splatter)
workdir              = "/home/sam/Documents/RareCellDetection/Proj/10X_subsample_A/"
# where you put the data and results
setwd(workdir)
load('results/OURClustering_order.RData')  # FiRE.result.order
load('results/FiREClustering_order.RData')  # GapClust.result.order
mat1 <- matrix(NA, 100, 99)
mat2 <- matrix(NA, 100, 99)
for(m in 1:length(OUR.result.order)){
score <- OUR.result.order[[m]]
top100 <- score[order(score, decreasing = T)[1:100]]
mat1[,m] <- ifelse(grepl('CD14', names(top100)), 1, 0)
}
for(n in 1:length(FiRE.result.order)){
score <- FiRE.result.order[[n]]
top100 <- score[order(score, decreasing = T)[1:100]]
mat2[,n] <- ifelse(grepl('CD14', names(top100)), 1, 0)
}
dimnames(mat2)[[1]] <- rep(' ',  dim(mat1)[1])
dimnames(mat2)[[1]][c(2, 20, 40, 60, 80, 99)] <- c('1', '20', '40', '60', '80', '100')
dimnames(mat2)[[2]] <- rep(' ',  dim(mat1)[1])
dimnames(mat2)[[2]][c(2, 20, 40, 60, 80, 99)] <- c('1', '20', '40', '60', '80', '100')
dimnames(mat1)[[2]] <- rep(' ',  dim(mat1)[2])
dimnames(mat1)[[2]][c(2, 19, 39, 59, 79, 99)] <- c('2', '20', '40', '60', '80', '100')
dimnames(mat2)[[2]] <- rep(' ',  dim(mat2)[2])
dimnames(mat2)[[2]][c(2, 19, 39, 59, 79, 99)] <- c('2', '20', '40', '60', '80', '100')
colors = structure(c('grey90', 'grey90'), names = c("0", "1"))
ht1 <- Heatmap(mat1, col = colors, cluster_rows = F, cluster_columns = F, show_heatmap_legend = F, column_title = "GapClust",
row_names_side = c("left"), border = T,
column_names_gp = gpar(fontsize=18), row_names_gp = gpar(fontsize=18), column_title_gp = gpar(fontsize = 24),
rect_gp = gpar(col = "white", lwd = 0.5), column_labels = colnames(mat1), column_names_rot=0, column_gap = unit(6, 'mm'),
layer_fun = function(j, i, x, y, w, h, fill) {
ind_mat = restore_matrix(j, i, x, y)
for(ir in seq_len(nrow(ind_mat))) {
# start from the second column
for(ic in seq_len(ncol(ind_mat))) {
ind = ind_mat[ir, ic]   # current column
v = mat1[i[ind], j[ind]]
if(v > 0) { # if they have the same sign
col = "steelblue3"
grid.points(x[c(ind)], y[c(ind)],
pch = 19, gp = gpar(col = col), size = unit(1.4, "mm"))
}
}
}
})
ht2 <- Heatmap(mat2, col = colors, cluster_rows = F, cluster_columns = F, show_heatmap_legend = F, column_title = "FiRE",
row_names_side = c("left"), row_title_gp = gpar(fontsize = 20), row_title = "Rank", border = T,
column_names_gp = gpar(fontsize=18), row_names_gp = gpar(fontsize=18), column_title_gp = gpar(fontsize = 24),
rect_gp = gpar(col = "white", lwd = 0.5), column_labels = colnames(mat1), column_names_rot=0, column_gap = unit(6, 'mm'),
layer_fun = function(j, i, x, y, w, h, fill) {
ind_mat = restore_matrix(j, i, x, y)
for(ir in seq_len(nrow(ind_mat))) {
# start from the second column
for(ic in seq_len(ncol(ind_mat))) {
ind = ind_mat[ir, ic]   # current column
v = mat2[i[ind], j[ind]]
if(v > 0) { # if they have the same sign
col = "steelblue3"
grid.points(x[c(ind)], y[c(ind)],
pch = 19, gp = gpar(col = col), size = unit(1.4, "mm"))
}
}
}
})
ht_list = ht2 + ht1
ComplexHeatmap::draw(ht_list, ht_gap = unit(0.5, "cm"), column_title='# of rare cells', column_title_gp = gpar(fontsize = 22), column_title_side = c("bottom"))
library(ggplot2)
library(ComplexHeatmap)
library(splatter)
workdir              = "/home/sam/Documents/RareCellDetection/Proj/jurkat_two_species/"
# where you put the data and results
setwd(workdir)
load('results/RaceIDClustering.RData') # RaceID.result
load('results/OURClustering.RData') # GapClust.result
load('results/GiniClustering.RData') # Gini.result
load('results/FiREClustering.RData') # FiRE.result
true.res <- RaceID.result
jurkat.num.vec <- c(8, 16, 24, 32, 40, 48, 56, 65, 73, 82)
for (jurkat.num in jurkat.num.vec){
#k=ks[j]
exprimentID<-paste("Jurkat_",jurkat.num,"_293_1580_cells",sep="")
load(paste0('results/', exprimentID, '.RData'))
true.res[[which(jurkat.num.vec %in% jurkat.num)]] <- ifelse(grepl('Jurkat', dimnames(jurkat.293)[[2]]), 1, 0)
rm(list=c('jurkat.293', 'exprimentID'))
}
Gini.result <- sapply(Gini.result, as.character)
transform.gini <- function(){
gini.res <- list()
for(i in 1:length(Gini.result)){
cnt <- table(Gini.result[[i]])
cnt.top <- table(Gini.result[[i]][1541:(1540 + jurkat.num.vec[i])])
small <- names(cnt)[cnt <= sum(cnt) * 0.15] # 0.15 is for 100 cells or a little more
small <- small[small != 'Singleton']
small <- small[small %in% names(cnt.top)]
if(length(small)>=1){
gini.res[[i]] <- ifelse(Gini.result[[i]] %in% small, 1, 0)
}else{
gini.res[[i]] <- (rep(0, length(Gini.result[[i]])))
}
}
return(gini.res)
}
transform.race <- function(){
race.res <- list()
for(i in 1:length(RaceID.result)){
cnt <- table(RaceID.result[[i]])
#cnt.top <- table(RaceID.result[[i]][1541:(1540 + jurkat.num.vec[i])])
#small <- names(cnt)[cnt <= sum(cnt) * 0.15] # 0.15 is for 100 cells or a little more
#small <- small[small %in% names(cnt.top)]
major <- names(cnt)[which.max(cnt)]
race.res[[i]] <- ifelse(RaceID.result[[i]] %in% major, 0, 1)
# if(length(small)>=1){
#   #race.res[[i]] <- ifelse(RaceID.result[[i]] %in% small, 1, 0)
#   race.res[[i]] <- ifelse(RaceID.result[[i]] %in% major, 0, 1)
# }else{
#   race.res[[i]] <- (rep(0, length(RaceID.result[[i]])))
# }
}
return(race.res)
}
gini.res <- transform.gini()
race.res <- transform.race()
for(i in 1:10){
print(table(RaceID.result[[i]]))
print(table(race.res[[i]]))
}
calcul.f1 <- function(res){
f1.vec <- c()
for(i in 1:length(res)){
TP <- length(which(res[[i]] == 1 & true.res[[i]] == 1))
FP <- length(which(res[[i]] == 1 & true.res[[i]] == 0))
FN <- length(which(res[[i]] == 0 & true.res[[i]] == 1))
if(TP ==0 & FP ==0){
P = 0
}else{
P= TP / (TP + FP)
}
if(TP == 0 & FN == 0){
R = 0
}else{
R = TP / (TP + FN)
}
if(P == 0 & R == 0){
f1.vec <- c(f1.vec, 0)
}else{
f1.vec <- c(f1.vec, 2*P*R/(P+R))
}
}
return(f1.vec)
}
f1 <- calcul.f1(gini.res)
f2 <- calcul.f1(OUR.result)
f3 <- calcul.f1(race.res)
f4 <- calcul.f1(FiRE.result)
df <- data.frame(x=rep(c(8, 16, 24, 32, 40, 48, 56, 65, 73, 82), 4),
y=c(f3, f2, f1, f4),
group=c(rep('RaceID', 10), rep('GapClust', 10), rep('GiniClust', 10), rep('FiRE', 10)))
df$group <- factor(df$group, levels=c('GapClust', 'RaceID', 'GiniClust', 'FiRE'), ordered = T)
sp1 <- ggplot(data=df) + geom_point(aes(x=x, y=y, color=group), size=3) + geom_line(aes(x=x, y=y, color=group))
sp1 + theme_bw() + theme(#panel.grid.minor = element_blank(), panel.grid.major = element_blank(),
legend.position='right', panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.text = element_text(size = 14, face = "bold"),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) + labs(x='% of rare cells', y=expression(paste(F["1 "], score))) +
scale_color_manual(name=NULL, values = c("RaceID"='red1', "GapClust"="forestgreen", "GiniClust"="DeepSkyBlue", "FiRE" = "navy")) +
scale_x_continuous(breaks=c(8, 16, 24, 32, 40, 48, 56, 65, 73, 82), labels=c('0.5', '1.0', '1.5', '2.0', '2.5', '3.0', '3.5', '4.0', '4.5', '5.0'))
rm(list=ls())
gc()
setwd('/home/sam/Documents/RareCellDetection/Proj/Runtime/')
library(ggplot2)
## Memory usage plot
memory.dat <- data.frame(method=c('GiniClust', 'RaceID', 'CellSIUS','FiRE', 'GapClust'),
size=c(117.93, 78.58, 168.16, 19.47, 2.79),
col=c('DeepSkyBlue', 'red1', 'Magenta', 'navy', 'green4'))
memory.dat$method <- factor(memory.dat$method, levels=c('GapClust', 'RaceID', 'GiniClust', 'CellSIUS','FiRE'), ordered = T)
col=c('green4', 'red1', "DeepSkyBlue", "Magenta", "navy")
p1 <- ggplot(memory.dat,aes(method, size, fill=method)) + geom_bar(stat='identity', width=0.5) +
scale_fill_manual(name=NULL, values = col) + theme_bw() +
theme(legend.position="none", panel.border = element_rect(color='black', fill=NA, size=1),
axis.text.x = element_text(size=14, colour = 'black'),
axis.text.y = element_text(size=14),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16)
) + labs(x=' ', y='Memory usage/GB')
str(memory.dat)
write.csv(memory.dat, file='memory.csv', fileEncoding = 'utf-8')
cell.num <- c(1000, 2500, 5000, 10000, 15000, 20000, 25000, 30000, 35000, 40000, 45000, 50000, 55000, 60000, 65000, 68579)
cellsius.time <- c()
for(i in 1:14){
load(paste0('CELLSIUS_runtime_', i, '.RData'))
cellsius.time <- c(cellsius.time, as.numeric(time.taken, units='mins'))
}
fire.time <- c()
for(i in 1:16){
load(paste0('FiRE_runtime_', i, '.RData'))
fire.time <- c(fire.time, as.numeric(time.taken, units='mins'))
}
our.time <- c()
for(i in 1:16){
load(paste0('OUR_runtime_', i, '.RData'))
our.time <- c(our.time, as.numeric(time.taken, units='mins'))
}
gini.time <- c()
for(i in 1:11){
load(paste0('Gini_runtime_', i, '.RData'))
gini.time <- c(gini.time, as.numeric(time.taken, units='mins'))
}
race.time <- c()
for(i in 1:9){
load(paste0('RaceID_runtime_', i, '.RData'))
race.time <- c(race.time, as.numeric(time.taken, units='mins'))
}
df <- data.frame(x=c(cell.num[1:14], cell.num[1:16], cell.num[1:16], cell.num[1:11], cell.num[1:9]),
y=c(cellsius.time, fire.time, our.time, gini.time, race.time),
group=c(rep('CellSIUS', 14), rep('FiRE', 16), rep('GapClust', 16), rep('GiniClust', 11), rep('RaceID', 9)))
df$logx <- log10(df$x)
df$logy <- log10(df$y)
df$group <- factor(df$group, levels=c('GapClust', 'RaceID', 'GiniClust', 'CellSIUS','FiRE'), ordered = T)
str(df)
write.csv(df, file='runtime.csv', fileEncoding = 'utf-8')
