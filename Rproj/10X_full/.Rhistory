library(rflann)
library(Seurat)
library(ineq)
library(e1071)
library(irlba)
library(scran)
library(ggplot2)
library(pbapply)
library(future.apply)
source('utils.R')
workdir              = paste0(getwd(), '/../Rproj/10X_full')
# where you put the data and results
setwd(workdir)
load('data/PBMC_68K_normalized.RData')
load('data/PBMC_68K_normalized_gene_symbols.RData')
res <- GapClust::GapClust(data4)
## Plot figures
tsne <- read.table('data/68k_pbmc_barcodes_annotation.tsv', header=T, stringsAsFactors = F, sep='\t')
labels <- read.csv('single-cell-3prime-paper-master/pbmc68k_analysis/PureClusters.csv', header=F, stringsAsFactors = F)
cls <- rep(0, dim(data4)[2])
for(i in 1:length(res$rare_cell_indices)){
cls[res$rare_cell_indices[[i]]] <- i
}
tsne$cluster <- as.character(cls)
tsne <- tsne[c(which(tsne$cluster=='0'), which(tsne$cluster!='0')),]
p <- ggplot(data=tsne, aes(x=TSNE.1, y=TSNE.2, colour=cluster)) + geom_point(size=0.3) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position='none',
legend.text = element_text(size = 12),
panel.border = element_rect(colour = "black", fill=NA, size=1),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) + labs(x='tSNE-1', y='tSNE-2') +
scale_color_manual(name=NULL, values = c('0'='grey', '1'="Red1", '2'="DeepSkyBlue"))
p
# ## For legend
# p1 <- ggplot(data=tsne, aes(x=TSNE.1, y=TSNE.2, colour=cluster)) + geom_point(size=2) +
#   theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
#                      legend.text = element_text(size = 12),
#                      panel.border = element_rect(colour = "black", fill=NA, size=1),
#                      axis.text.x = element_blank(),
#                      axis.text.y = element_blank(),
#                      axis.title.x = element_text(size=16),
#                      axis.title.y = element_text(size=16),
#                      axis.ticks.x = element_blank(),
#                      axis.ticks.y = element_blank()) + labs(x='tSNE-1', y='tSNE-2') +
#   scale_color_manual(name=NULL, values = c('0'='grey', '1'="DeepSkyBlue", '2'="Red1"))
# p1
library(pheatmap)
data44 <- data4[!duplicated(dimnames(data4)[[1]]),]
data3 <- as.matrix(data44[, cls %in% c('1', '2')])
grp <-cls[cls %in% c('1', '2')]
#
vals <- sort(unique(c(data3)))
data3[data3==0] <- vals[2]
id1 <- which(id.max==2)
id2 <- which(labels$V1=='CD14+ Monocyte')
data10 <- as.matrix(data44[,c(id1, setdiff(id2, id1))])
data10 <- data10[rowSums(data10)>0,]
data11 <- data10
vals1 <- sort(unique(c(data10)))
data10[data10==0] <- vals1[2]
grp <- c(1,1,1, rep(2, length(id2)-length(id1)))
FC <- apply(data10, 1, function(x){log2(mean(x[grp==1])/mean(x[grp==2]))})
DE <- WilcoxDETest((data11), cells.1 = dimnames(data11)[[2]][grp==1],
cells.2 = dimnames(data11)[[2]][grp==2], verbose = F)
DE.genes <- dimnames(data10)[[1]][abs(FC)>1 & p.adjust(DE$p_val)<0.05]
annotation_col = data.frame(
"Clusters" = factor(grp, levels=c(1, 2), labels=c('1', 'CD14+ Monocyte'))
)
rownames(annotation_col) = colnames(data11)
cols = list(Clusters = c("1" = "red1", "CD14+ Monocyte"="grey80"))
pheatmap((log2(data11[DE.genes,1:53]+1)), show_colnames=F,
cluster_cols = F, cluster_rows = T, show_rownames = F, annotation_col = annotation_col, annotation_colors = cols,
annotation_names_row=F, legend=T, annotation_legend = T, angle_col = "45")
## Scatter plot
library(easyGgplot2)
data12 <- log2(data11[FC < -1,]+1)
data122 <- data12[rowSums(data12[,1:3])==0,]
gene.sym <- gene.symbols[dimnames(data4)[[1]] %in% dimnames(data122)[[1]]]
value <- c()
gene <- c()
for(j in 1:dim(data12)[1]){
value <- c(value, data12[j,])
gene <- c(gene, rep(dimnames(data12)[[1]][j], dim(data12)[2]))
}
plot.df <- data.frame(gene=gene, value=value, group=c(rep(c('1', '1', '1', rep('CD14+ Monocyte', dim(data12)[2]-3)), dim(data12)[1])))
# legend
ggplot(data=plot.df) + geom_point(aes(x=gene,y=value, colour=group), position=position_dodge(0.8), size=1) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.text = element_text(size = 12), legend.position=c(0.9, 0.9),
panel.border = element_rect(colour = "black", fill=NA, size=1),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) + labs(x='Gene', y='Log2(Count+1)') +
scale_color_manual(name=NULL, values = c("1"='Red1', "CD14+ Monocyte"="grey"))
id1 <- which(cls==2)
id2 <- which(labels$V1=='CD34+')
data11 <- as.matrix(data44[,c(id1, setdiff(id2, id1))])
data11 <- data11[rowSums(data11)>0,]
grp <- c(rep(1, length(id1)), rep(2, length(id2)-length(id1)))
## cls_149
DE <- WilcoxDETest((data11), cells.1 = dimnames(data11)[[2]][grp==1],
cells.2 = dimnames(data11)[[2]][grp==2], verbose = F)
logFC <- apply(data11, 1, function(x){log(mean(x[grp==1])/mean(x[grp==2]))})
data111 <- data11[!is.na(DE$p_val) & !is.na(logFC),]
logFC1 <- logFC[!is.na(DE$p_val) & !is.na(logFC)]
DE1 <- DE$p_val[!is.na(DE$p_val) & !is.na(logFC)]
df1 <- data.frame(logFC=logFC1, p_val=DE1, gene=dimnames(data111)[[1]])
df1 <- df1[p.adjust(df1$p_val, 'fdr') < 0.05,]
df1 <- df1[abs(df1$logFC)>1,]
data112 <- data111[which(dimnames(data111)[[1]] %in% df1$gene),]
row.ave <- apply(data112, 1, mean)
gene.grp1 <- sort(row.ave[df1$logFC>0], decreasing = T)[1:50]
gene.grp2 <- sort(row.ave[df1$logFC<0], decreasing = T)[1:50]
gene.grp.all <- c(names(gene.grp1), names(gene.grp2))
gene.symbols[dimnames(data4)[[1]] %in% gene.grp.all]
data113 <- data112[gene.grp.all,]
gene.map <- gene.symbols
names(gene.map) <- dimnames(data4)[[1]]
dimnames(data113)[[1]] <- gene.map[dimnames(data113)[[1]]]
annotation_row = data.frame(
"Clusters" = factor(grp, levels=c('1', '2'), labels=c('2', 'CD34+'))
)
rownames(annotation_row) = colnames(data113)
cols = list(Clusters = c("2" = "red1", 'CD34+'='grey80'))
pheatmap(t(log2(data113+1)),
cluster_cols = F, cluster_rows = F, show_rownames = F, annotation_row = annotation_row, annotation_colors = cols,
annotation_names_row=F, legend=T, annotation_legend = T, angle_col = "45", fontsize_col=10)
table(cls)
id1 <- which(cls==1)
id1
library(pheatmap)
data44 <- data4[!duplicated(dimnames(data4)[[1]]),]
data3 <- as.matrix(data44[, cls %in% c('1', '2')])
grp <-cls[cls %in% c('1', '2')]
#
vals <- sort(unique(c(data3)))
data3[data3==0] <- vals[2]
id1 <- which(cls==1)
id2 <- which(labels$V1=='CD14+ Monocyte')
data10 <- as.matrix(data44[,c(id1, setdiff(id2, id1))])
data10 <- data10[rowSums(data10)>0,]
data11 <- data10
vals1 <- sort(unique(c(data10)))
data10[data10==0] <- vals1[2]
grp <- c(1,1,1, rep(2, length(id2)-length(id1)))
FC <- apply(data10, 1, function(x){log2(mean(x[grp==1])/mean(x[grp==2]))})
DE <- WilcoxDETest((data11), cells.1 = dimnames(data11)[[2]][grp==1],
cells.2 = dimnames(data11)[[2]][grp==2], verbose = F)
DE.genes <- dimnames(data10)[[1]][abs(FC)>1 & p.adjust(DE$p_val)<0.05]
annotation_col = data.frame(
"Clusters" = factor(grp, levels=c(1, 2), labels=c('1', 'CD14+ Monocyte'))
)
rownames(annotation_col) = colnames(data11)
cols = list(Clusters = c("1" = "red1", "CD14+ Monocyte"="grey80"))
pheatmap((log2(data11[DE.genes,1:53]+1)), show_colnames=F,
cluster_cols = F, cluster_rows = T, show_rownames = F, annotation_col = annotation_col, annotation_colors = cols,
annotation_names_row=F, legend=T, annotation_legend = T, angle_col = "45")
## Scatter plot
library(easyGgplot2)
data12 <- log2(data11[FC < -1,]+1)
data122 <- data12[rowSums(data12[,1:3])==0,]
gene.sym <- gene.symbols[dimnames(data4)[[1]] %in% dimnames(data122)[[1]]]
value <- c()
gene <- c()
for(j in 1:dim(data12)[1]){
value <- c(value, data12[j,])
gene <- c(gene, rep(dimnames(data12)[[1]][j], dim(data12)[2]))
}
plot.df <- data.frame(gene=gene, value=value, group=c(rep(c('1', '1', '1', rep('CD14+ Monocyte', dim(data12)[2]-3)), dim(data12)[1])))
# legend
ggplot(data=plot.df) + geom_point(aes(x=gene,y=value, colour=group), position=position_dodge(0.8), size=1) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
legend.text = element_text(size = 12), legend.position=c(0.9, 0.9),
panel.border = element_rect(colour = "black", fill=NA, size=1),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) + labs(x='Gene', y='Log2(Count+1)') +
scale_color_manual(name=NULL, values = c("1"='Red1', "CD14+ Monocyte"="grey"))
id1 <- which(cls==2)
id2 <- which(labels$V1=='CD34+')
data11 <- as.matrix(data44[,c(id1, setdiff(id2, id1))])
data11 <- data11[rowSums(data11)>0,]
grp <- c(rep(1, length(id1)), rep(2, length(id2)-length(id1)))
## cls_149
DE <- WilcoxDETest((data11), cells.1 = dimnames(data11)[[2]][grp==1],
cells.2 = dimnames(data11)[[2]][grp==2], verbose = F)
logFC <- apply(data11, 1, function(x){log(mean(x[grp==1])/mean(x[grp==2]))})
data111 <- data11[!is.na(DE$p_val) & !is.na(logFC),]
logFC1 <- logFC[!is.na(DE$p_val) & !is.na(logFC)]
DE1 <- DE$p_val[!is.na(DE$p_val) & !is.na(logFC)]
df1 <- data.frame(logFC=logFC1, p_val=DE1, gene=dimnames(data111)[[1]])
df1 <- df1[p.adjust(df1$p_val, 'fdr') < 0.05,]
df1 <- df1[abs(df1$logFC)>1,]
data112 <- data111[which(dimnames(data111)[[1]] %in% df1$gene),]
row.ave <- apply(data112, 1, mean)
gene.grp1 <- sort(row.ave[df1$logFC>0], decreasing = T)[1:50]
gene.grp2 <- sort(row.ave[df1$logFC<0], decreasing = T)[1:50]
gene.grp.all <- c(names(gene.grp1), names(gene.grp2))
gene.symbols[dimnames(data4)[[1]] %in% gene.grp.all]
data113 <- data112[gene.grp.all,]
gene.map <- gene.symbols
names(gene.map) <- dimnames(data4)[[1]]
dimnames(data113)[[1]] <- gene.map[dimnames(data113)[[1]]]
annotation_row = data.frame(
"Clusters" = factor(grp, levels=c('1', '2'), labels=c('2', 'CD34+'))
)
rownames(annotation_row) = colnames(data113)
cols = list(Clusters = c("2" = "red1", 'CD34+'='grey80'))
pheatmap(t(log2(data113+1)),
cluster_cols = F, cluster_rows = F, show_rownames = F, annotation_row = annotation_row, annotation_colors = cols,
annotation_names_row=F, legend=T, annotation_legend = T, angle_col = "45", fontsize_col=10)
## Plot figures
tsne <- read.table('data/68k_pbmc_barcodes_annotation.tsv', header=T, stringsAsFactors = F, sep='\t')
labels <- read.csv('single-cell-3prime-paper-master/pbmc68k_analysis/PureClusters.csv', header=F, stringsAsFactors = F)
cls <- rep(0, dim(data4)[2])
for(i in 1:length(res$rare_cell_indices)){
cls[res$rare_cell_indices[[i]]] <- i
}
tsne$cluster <- as.character(cls)
tsne <- tsne[c(which(tsne$cluster=='0'), which(tsne$cluster!='0')),]
p <- ggplot(data=tsne, aes(x=TSNE.1, y=TSNE.2, colour=cluster)) + geom_point(size=0.3) +
theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), legend.position='none',
legend.text = element_text(size = 12),
panel.border = element_rect(colour = "black", fill=NA, size=1),
axis.text.x = element_blank(),
axis.text.y = element_blank(),
axis.title.x = element_text(size=16),
axis.title.y = element_text(size=16),
axis.ticks.x = element_blank(),
axis.ticks.y = element_blank()) + labs(x='tSNE-1', y='tSNE-2') +
scale_color_manual(name=NULL, values = c('0'='grey', '1'="Red1", '2'="DeepSkyBlue"))
p
# ## For legend
# p1 <- ggplot(data=tsne, aes(x=TSNE.1, y=TSNE.2, colour=cluster)) + geom_point(size=2) +
#   theme_bw() + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(),
#                      legend.text = element_text(size = 12),
#                      panel.border = element_rect(colour = "black", fill=NA, size=1),
#                      axis.text.x = element_blank(),
#                      axis.text.y = element_blank(),
#                      axis.title.x = element_text(size=16),
#                      axis.title.y = element_text(size=16),
#                      axis.ticks.x = element_blank(),
#                      axis.ticks.y = element_blank()) + labs(x='tSNE-1', y='tSNE-2') +
#   scale_color_manual(name=NULL, values = c('0'='grey', '1'="DeepSkyBlue", '2'="Red1"))
# p1
getwd()
